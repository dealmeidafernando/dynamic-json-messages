const DJM=(()=>{const instanceManager={},instanceManagerHandler={};let jsonFullFileName="",jsonFilePath="",jsonString="",canRefresh=!0,canAppendResponses=!1;const _LoadJSONFileAsync=async(jsonFileFullPath="",callback)=>{jsonFullFileName=(jsonFilePath=jsonFileFullPath).substr(jsonFilePath.lastIndexOf("/")+1),await fetch(jsonFilePath).then(response=>response.json()).then(data=>{jsonString=data}).catch(error=>console.log(`[DJM] Error loading "${jsonFilePath}": ${error.message}`)).finally(()=>{callback&&"function"==typeof callback&&callback(jsonString)})},_Settings=({isRefreshable:isRefreshable=!0,appendResponses:appendResponses=!1})=>{canRefresh=isRefreshable,canAppendResponses=appendResponses},applyDebounce=callback=>{let timeout;return async(key="",{waitTime:waitTime=300,response:response="",excludeTemplate:excludeTemplate,lock:lock=!1,reset:reset=!1}={})=>(clearTimeout(timeout),new Promise(resolve=>{timeout=setTimeout(()=>resolve(callback(key,{response:response,excludeTemplate:excludeTemplate,lock:lock,reset:reset})),waitTime)}))},_TemplateGenerator={_Exclude:(onProperty="")=>{const excludeDefinition=[];return{_AddExclude:(match="",active)=>{excludeDefinition[excludeDefinition.length]={match:match,active:active}},_GetTemplate:()=>({onProp:onProperty,exclude:excludeDefinition})}}},mainWorker=new Worker(URL.createObjectURL(new Blob([`onmessage=${e=>{let djm;const contextManager={};function setInstance(data,callback){void 0===data.instance?(data.nestedNodes=[],data.savedInfo={},data.skipToNode={},data.dataAttribs={},data.dataIndex=0,data.retrievedResponseNodeLevel=0,data.retrievedResponseValueNodeLevel=0,djm=data):djm=data.instance,callback({key:data.key,response:data.response,excludeTemplate:data.excludeTemplate,canAppendResponses:data.canAppendResponses})}function getResult(key,response,excludeTemplate,appendResponses){let{jsonStringKey:jsonStringKey,reloaded:reloaded,dataAttribs:dataAttribs,dataIndex:dataIndex,retrievedResponseNodeLevel:retrievedResponseNodeLevel,retrievedResponseValueNodeLevel:retrievedResponseValueNodeLevel}=djm;const{nestedNodes:nestedNodes,jsonFileName:jsonFileName,jsonStringLoaded:jsonStringLoaded,savedInfo:savedInfo,skipToNode:skipToNode}=djm;function sendMessage(type){dataAttribs["*DJM_canResponse"]||(dataAttribs=void 0,savedInfo.lastResponseParentNode=void 0),savedInfo.resultSentBefore="result"===type,djm.excludeTemplate=void 0,djm.jsonStringKey=jsonStringKey,djm.reloaded=reloaded,djm.nestedNodes.length=nestedNodes.length,djm.savedInfo=savedInfo,djm.skipToNode=skipToNode,djm.dataAttribs=dataAttribs,djm.dataIndex=dataIndex,djm.retrievedResponseNodeLevel=retrievedResponseNodeLevel,djm.retrievedResponseValueNodeLevel=retrievedResponseValueNodeLevel,postMessage({type:type,data:djm})}function updateNextResponseNode(returnedResponse,parentResponseNodeId,parentResponseNodeLevel,returnedResponseNodeLevel){skipToNode[returnedResponse][parentResponseNodeId]={parentResponseNodeLevel:parentResponseNodeLevel,returnedResponseNodeLevel:returnedResponseNodeLevel}}function updateNextSequenceNode(parentSequenceNodeId,sequenceNodeLevel,updateOnNextTime){skipToNode[parentSequenceNodeId]={sequenceNodeLevel:sequenceNodeLevel,updateOnNextTime:updateOnNextTime}}function hasObjectPropertyLightweightExtended(object,property,checkParentLength=!1){const value=object[property],exists=void 0!==value;return{exists:exists,value:value,parentLength:checkParentLength?Object.values(object).length:void 0}}function checkIfExcluded(currentNode,isCheckingForResponse=!1){let nodeHasOnProp=!1,excluded=!1;if(excludeTemplate){const excludeTemplateProperty=excludeTemplate.onProp,excludeTemplateExclude=excludeTemplate.exclude;if(excludeTemplateProperty&&excludeTemplateExclude){const definitionPropertyProperty=hasObjectPropertyLightweightExtended(currentNode,excludeTemplateProperty);if(!(nodeHasOnProp=nodeHasOnProp||definitionPropertyProperty.exists))return{nodeHasOnProp:nodeHasOnProp,excluded:excluded};const definitionLength=excludeTemplateExclude.length;for(let i=0;i<definitionLength;i++){const{match:match,active:active}=excludeTemplateExclude[i],matches=definitionPropertyProperty.value===match,isActive=!!+active;if(excluded=matches&&void 0===active||matches&&isActive){currentNode["*DJM_finished"]=!isCheckingForResponse;break}}}}return{nodeHasOnProp:nodeHasOnProp,excluded:!currentNode["*DJM_hasPendingResponse"]&&excluded}}function getNextAlternateSequenceNode(currentNode){let firstSequenceNodeIndex,nextSequenceNodeIndex;void 0===skipToNode[currentNode["*DJM_sequenceId"]]&&updateNextSequenceNode(currentNode["*DJM_sequenceId"],0);const sequenceLength=currentNode.sequence.length;for(let i=0;i<sequenceLength;i++){if(!checkIfExcluded(currentNode.sequence[i]).excluded&&(void 0===firstSequenceNodeIndex&&(firstSequenceNodeIndex=i),i>skipToNode[currentNode["*DJM_sequenceId"]].sequenceNodeLevel)){nextSequenceNodeIndex=i;break}i===sequenceLength-1&&(nextSequenceNodeIndex=firstSequenceNodeIndex)}return nextSequenceNodeIndex}function getNextResponseNode(returnedResponse,isFirstTime){let firstResponseNodeIndex,nextResponseNodeIndex,firstReturnedResponseValueNodeIndex,nextReturnedResponseValueNodeIndex;contextManager.allReturnedResponseExcluded=void 0;const lastSkipToResponseNode=skipToNode[returnedResponse][savedInfo.responseId],lastResponseParentNodeResponseLength=savedInfo.lastResponseParentNode.response.length;for(let i=0;i<lastResponseParentNodeResponseLength;i++){savedInfo.lastResponseParentNode.response[i]["*isResponseLevel"]=!0;const currentReturnedResponseValueNode=savedInfo.lastResponseParentNode.response[i][returnedResponse];if(currentReturnedResponseValueNode){const currentReturnedResponseValueLength=currentReturnedResponseValueNode.length;for(let j=0;j<currentReturnedResponseValueLength;j++)if(!checkIfExcluded(currentReturnedResponseValueNode[j],!0).excluded&&(void 0===firstResponseNodeIndex&&(firstResponseNodeIndex=i),void 0===firstReturnedResponseValueNodeIndex&&(firstReturnedResponseValueNodeIndex=j),i===lastSkipToResponseNode.parentResponseNodeLevel&&j>lastSkipToResponseNode.returnedResponseNodeLevel||isFirstTime&&j>=lastSkipToResponseNode.returnedResponseNodeLevel||i>lastSkipToResponseNode.parentResponseNodeLevel)){nextResponseNodeIndex=i,nextReturnedResponseValueNodeIndex=j;break}}if(void 0!==nextResponseNodeIndex)break;i===lastResponseParentNodeResponseLength-1?(nextResponseNodeIndex=firstResponseNodeIndex,nextReturnedResponseValueNodeIndex=firstReturnedResponseValueNodeIndex,contextManager.allReturnedResponseExcluded=void 0===nextResponseNodeIndex&&void 0===nextReturnedResponseValueNodeIndex,contextManager.allReturnedResponseExcluded||(savedInfo.lastResponseParentNode.response[nextResponseNodeIndex]["*DJM_skipped"]=void 0,savedInfo.lastResponseParentNode.response[nextResponseNodeIndex][returnedResponse][nextReturnedResponseValueNodeIndex]["*DJM_skipped"]=void 0)):savedInfo.lastResponseParentNode.response[i]["*DJM_skipped"]=!0}return{parentResponseNodeLevel:nextResponseNodeIndex,returnedResponseValueNodeLevel:nextReturnedResponseValueNodeIndex}}function responseFN(returnedResponse){if(void 0===dataAttribs||!dataAttribs["*DJM_canResponse"]||contextManager.isExcluded&&!savedInfo.resultSentBefore)return;if(void 0===dataAttribs.response.length)throw new Error(`["${jsonFileName}" >> "${key}"]\nAll 'response' nested properties must be enclosed as array.`);void 0===skipToNode[returnedResponse]&&(skipToNode[returnedResponse]={});const isFirstTime=void 0===skipToNode[returnedResponse][savedInfo.responseId];isFirstTime&&updateNextResponseNode(returnedResponse,savedInfo.responseId,0,0);const{parentResponseNodeLevel:parentResponseNodeLevel,returnedResponseValueNodeLevel:returnedResponseValueNodeLevel}=getNextResponseNode(returnedResponse,isFirstTime);contextManager.allReturnedResponseExcluded||void 0===returnedResponseValueNodeLevel||(updateNextResponseNode(returnedResponse,savedInfo.responseId,parentResponseNodeLevel,returnedResponseValueNodeLevel),retrievedResponseNodeLevel=skipToNode[returnedResponse][savedInfo.responseId].parentResponseNodeLevel,retrievedResponseValueNodeLevel=skipToNode[returnedResponse][savedInfo.responseId].returnedResponseNodeLevel,dataAttribs["*DJM_canResponse"]=dataAttribs["*DJM_skipped"]=void 0,dataAttribs["*DJM_returnedResponse"]=returnedResponse,savedInfo.lastReturnedResponse=returnedResponse,savedInfo.hasResponded=!0,nestedNodes[nestedNodes.length]=dataAttribs,recursiveIteration(dataAttribs.response,retrievedResponseNodeLevel,!0,dataAttribs["*DJM_returnedResponse"]))}function recursiveIteration(data,startFromIndex=0,retrieveReturnedResponseNode,returnedResponse,isResponse,isSequence){try{if(!jsonStringLoaded)throw new Error(`["${jsonFileName}" >> "${key}"]\nJSON file not loaded.`);if(void 0===data)throw new Error(`["${jsonFileName}" >> "${key}"]\nThere's no data for the specified JSON key.`);dataAttribs=data[dataIndex=startFromIndex];const currentNodeIndex=dataIndex,sequenceProperty=hasObjectPropertyLightweightExtended(dataAttribs,"sequence",!0),responseProperty=hasObjectPropertyLightweightExtended(dataAttribs,"response"),repeatResponseProperty=hasObjectPropertyLightweightExtended(dataAttribs,"*repeatResponse"),requiredProperty=hasObjectPropertyLightweightExtended(dataAttribs,"*required"),alternateProperty=hasObjectPropertyLightweightExtended(dataAttribs,"*alternate");let hasShown=dataAttribs&&void 0!==dataAttribs["*DJM_shown"];const hasFinished=dataAttribs&&void 0!==dataAttribs["*DJM_finished"];let hasSkipped=dataAttribs&&void 0!==dataAttribs["*DJM_skipped"];if(!hasShown){if(sequenceProperty.exists){const sequenceLength=dataAttribs.sequence.length;if(void 0===sequenceLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nAll 'sequence' nested nodes must be enclosed as array.`);if(0===sequenceLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nAt least must exist one sequence nested node.`)}else if(responseProperty.exists){const responseLength=dataAttribs.response.length;if(void 0===responseLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nAll 'response' nested nodes must be enclosed as array.`);if(0===responseLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nAt least must exist one response value node on 'response' nested node.`)}else{const dataLength=data.length;if(void 0===dataLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nAll nodes must be enclosed as array.`);if(0===dataLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nCan't exist empty nodes.`)}if(responseProperty.exists&&sequenceProperty.exists)throw new Error(`["${jsonFileName}" >> "${key}"]\nNodes must not have both 'response' and 'sequence' properties at the same time.`);if(!responseProperty.exists&&repeatResponseProperty.exists)throw new Error(`["${jsonFileName}" >> "${key}"]\nThe '*repeatResponse' property must exist on parent response nodes only.`);if(!responseProperty.exists&&requiredProperty.exists)throw new Error(`["${jsonFileName}" >> "${key}"]\nThe '*required' property must exist on parent response nodes only.`);if(!sequenceProperty.exists&&alternateProperty.exists)throw new Error(`["${jsonFileName}" >> "${key}"]\nThe '*alternate' property must exist on parent sequence nodes only.`);0===nestedNodes.length&&(reloaded&&(reloaded=JSON.parse(JSON.stringify(reloaded))),savedInfo.rootNodeIndex=++savedInfo.rootNodeIndex||0,retrievedResponseNodeLevel=0),savedInfo.resultObject=JSON.parse(JSON.stringify(dataAttribs)),dataAttribs["*DJM_shown"]=!1}if(hasFinished||(dataAttribs["*DJM_finished"]=!1),responseProperty.exists&&(savedInfo.isRepeatResponse=void 0),responseProperty.exists&&dataAttribs["*DJM_shown"]){dataAttribs["*DJM_canResponse"]=void 0;const responseLength=dataAttribs.response.length;for(let i=0;i<responseLength&&(dataIndex=i,dataAttribs.response[i]["*DJM_finished"]||dataAttribs.response[i]["*DJM_skipped"]);i++);if(savedInfo.canFlow)return nestedNodes[nestedNodes.length]=dataAttribs,void recursiveIteration(dataAttribs.response,dataIndex,!0,dataAttribs["*DJM_returnedResponse"],!0);if(!savedInfo.hasResponded){contextManager.allReturnedResponseExcluded=void 0;let hasPreviousPendingSequence=!1;const nestedNodesFixedLength=nestedNodes.length-1;for(let i=nestedNodesFixedLength;i>=0;i--){const nestedNode=nestedNodes[i];if(nestedNode.sequence){const currentSequenceId=nestedNode["*DJM_sequenceId"];if(!checkIfExcluded(nestedNode).excluded)if(nestedNode["*alternate"])updateNextSequenceNode(currentSequenceId,void 0!==skipToNode[currentSequenceId]?skipToNode[currentSequenceId].sequenceNodeLevel:0,!0);else{const sequenceLength=nestedNode.sequence.length;for(let j=0;j<sequenceLength;j++)if(hasSkipped=void 0!==nestedNode.sequence[j]["*DJM_skipped"],hasShown=void 0!==nestedNode.sequence[j]["*DJM_shown"],!hasSkipped&&!hasShown){updateNextSequenceNode(`${currentSequenceId}:P`,j),hasPreviousPendingSequence=!0;break}}}if(hasPreviousPendingSequence)break}if(nestedNodes.length=0,savedInfo.responseHasPendingAlternateFromParent=void 0,hasPreviousPendingSequence)savedInfo.canFlow=!0,recursiveIteration(jsonStringKey,0);else{if(jsonStringKey.shift(),0===jsonStringKey.length)return savedInfo.resultSentBefore=void 0,savedInfo.rootNodeIndex=void 0,savedInfo.lastResponseParentNode=void 0,retrievedResponseNodeLevel=0,retrievedResponseValueNodeLevel=0,savedInfo.responseId=void 0,savedInfo.lastReturnedResponse=void 0,savedInfo.lastSequenceIsAlternate=void 0,savedInfo.canFlow=void 0,void recursiveIteration(jsonStringKey=reloaded,0);recursiveIteration(jsonStringKey,0)}return}}if(retrieveReturnedResponseNode){const returnedResponseLength=dataAttribs[returnedResponse].length;if(void 0===returnedResponseLength)throw new Error(`["${jsonFileName}" >> "${key}"]\nAll returned response value nested properties must be enclosed as array.`);for(let i=0;i<returnedResponseLength&&(dataIndex=i,returnedResponseLength>1&&retrievedResponseValueNodeLevel>0&&i<retrievedResponseValueNodeLevel&&(dataAttribs[returnedResponse][i]["*DJM_skipped"]=!0),dataAttribs[returnedResponse][i]["*DJM_finished"]||dataAttribs[returnedResponse][i]["*DJM_skipped"]);i++);return dataAttribs["*DJM_shown"]=!0,nestedNodes[nestedNodes.length]=dataAttribs,void recursiveIteration(dataAttribs[returnedResponse],dataIndex,!1,returnedResponse,!0)}const excludedResult=checkIfExcluded(dataAttribs,isResponse);if(contextManager.isExcluded=excludedResult.excluded,!contextManager.isExcluded&&(dataAttribs["*DJM_shown"]&&sequenceProperty.exists||sequenceProperty.exists&&(1===sequenceProperty.parentLength||(alternateProperty.exists||excludedResult.nodeHasOnProp)&&sequenceProperty.parentLength===2+(excludedResult.nodeHasOnProp?1:0)))){dataAttribs["*DJM_shown"]=!0;let isExcludedSequence=!1,hasSkipNodeDefinition=!1;savedInfo.responseHasPendingAlternateFromParent||(dataAttribs["*DJM_sequenceId"]=`root:${savedInfo.rootNodeIndex}-parent_response:${retrievedResponseNodeLevel}-index:${currentNodeIndex}-level:${nestedNodes.length}`);const currentSequenceId=dataAttribs["*DJM_sequenceId"],isAlternate=dataAttribs["*alternate"]=!!+dataAttribs["*alternate"];isAlternate&&(savedInfo.lastSequenceIsAlternate=!0,(hasSkipNodeDefinition=void 0!==skipToNode[currentSequenceId])&&skipToNode[currentSequenceId].updateOnNextTime&&updateNextSequenceNode(currentSequenceId,getNextAlternateSequenceNode(dataAttribs)));const sequenceLength=dataAttribs.sequence.length;for(let i=0;i<sequenceLength&&(dataIndex=i,isAlternate?!hasSkipNodeDefinition&&checkIfExcluded(dataAttribs.sequence[i]).excluded?dataAttribs.sequence[i]["*DJM_skipped"]=isExcludedSequence=!0:hasSkipNodeDefinition&&i<skipToNode[currentSequenceId].sequenceNodeLevel&&(dataAttribs.sequence[i]["*DJM_skipped"]=!0):checkIfExcluded(dataAttribs.sequence[i]).excluded&&(dataAttribs.sequence[i]["*DJM_skipped"]=!0),void 0!==skipToNode[`${currentSequenceId}:P`]&&(i<skipToNode[`${currentSequenceId}:P`].sequenceNodeLevel?dataAttribs.sequence[i]["*DJM_skipped"]=!0:skipToNode[`${currentSequenceId}:P`]=void 0),!dataAttribs.sequence[i]["*DJM_canResponse"]&&(dataAttribs.sequence[i]["*DJM_finished"]||dataAttribs.sequence[i]["*DJM_skipped"]||dataAttribs.sequence[i]["*DJM_done"]));i++);return isExcludedSequence&&updateNextSequenceNode(currentSequenceId,dataIndex),savedInfo.responseHasPendingAlternateFromParent||(nestedNodes[nestedNodes.length]=dataAttribs),void recursiveIteration(dataAttribs.sequence,dataIndex,void 0,void 0,void 0,!0)}if(!dataAttribs["*DJM_shown"]){if(!contextManager.isExcluded){if(savedInfo.resultObject.isSequence=isSequence,isSequence&&savedInfo.isAlternate&&(savedInfo.resultObject.isAlternate=!0,savedInfo.isAlternate=void 0),savedInfo.resultObject.isResponse=isResponse,savedInfo.resultObject.response=isResponse?returnedResponse:void 0,responseProperty.exists&&(savedInfo.resultObject.hasResponse=!0),isResponse&&savedInfo.isRepeatResponse&&(savedInfo.resultObject.isRepeatResponse=!0,savedInfo.isRepeatResponse=void 0),sequenceProperty.exists&&(savedInfo.resultObject.hasSequence=!0,savedInfo.resultObject.sequence=void 0),alternateProperty.exists&&(+alternateProperty.value&&(savedInfo.isAlternate=!0,savedInfo.resultObject.hasAlternate=!0),savedInfo.resultObject["*alternate"]=void 0),repeatResponseProperty.exists&&(+repeatResponseProperty.value&&(savedInfo.isRepeatResponse=!0,savedInfo.resultObject.hasRepeatResponse=!0),savedInfo.resultObject["*repeatResponse"]=void 0),requiredProperty.exists){const requiredValue=requiredProperty.value,isObject=obj=>obj&&obj.constructor&&obj.constructor===Object,isBooleanRequired=!!+requiredValue;savedInfo.resultObject.hasRequired=isBooleanRequired||isObject(requiredValue),savedInfo.resultObject["*required"]=void 0,savedInfo.requiredResult=savedInfo.resultObject.hasRequired&&isBooleanRequired?savedInfo.resultObject:requiredValue}if(dataAttribs["*DJM_shown"]=!0,sequenceProperty.exists||responseProperty.exists||(dataAttribs["*DJM_finished"]=!0),sequenceProperty.exists)savedInfo.canFlow=void 0!==savedInfo.lastReturnedResponse;else if(responseProperty.exists){if(dataAttribs["*DJM_canResponse"]=dataAttribs["*DJM_skipped"]=!0,savedInfo.canFlow=void 0,savedInfo.hasResponded=void 0,savedInfo.responseId=dataAttribs["*DJM_responseId"]=`root:${savedInfo.rootNodeIndex}-index:${currentNodeIndex}-response:${retrievedResponseNodeLevel}-${void 0===savedInfo.responseId||void 0===savedInfo.lastReturnedResponse?"default":savedInfo.lastReturnedResponse}:${nestedNodes.length}`,savedInfo.lastResponseParentNode=dataAttribs,savedInfo.responseHasPendingAlternateFromParent=savedInfo.lastSequenceIsAlternate,appendResponses){const responses=dataAttribs.response.map(p=>Object.keys(p)).reduce((a,b)=>a.concat(b));savedInfo.resultObject.responses=responses.filter((v,i)=>responses.indexOf(v)===i)}return savedInfo.resultObject.isSequence&&(nestedNodes[nestedNodes.length-1]["*DJM_hasPendingResponse"]=!0),void sendMessage("result")}}let hasPendingSequence=!1,returnedResponseValueNodeHasFinished=!1;if(!contextManager.isExcluded||contextManager.isExcluded&&(isSequence||isResponse)){const nestedNodesFixedLength=nestedNodes.length-1;for(let i=nestedNodesFixedLength;i>=0;i--){const nestedNode=nestedNodes[i],hasSequenceProperty=void 0!==nestedNode.sequence,sequenceParentNodeIsAlternate=nestedNode["*alternate"],hasResponseProperty=void 0!==nestedNode.response;if((isResponse=nestedNode["*isResponseLevel"])&&!returnedResponseValueNodeHasFinished){let skipCounter=0;const lastReturnedResponseLength=nestedNode[savedInfo.lastReturnedResponse].length;for(let j=0;j<lastReturnedResponseLength;j++)if((hasSkipped=void 0!==nestedNode[savedInfo.lastReturnedResponse][j]["*DJM_skipped"])&&skipCounter++,nestedNode[savedInfo.lastReturnedResponse][j]["*DJM_finished"]){returnedResponseValueNodeHasFinished=!0;break}nestedNode["*DJM_finished"]=skipCounter+(returnedResponseValueNodeHasFinished?1:0)===lastReturnedResponseLength}else if(hasSequenceProperty){hasPendingSequence=!0;const sequenceFixedLength=nestedNode.sequence.length-1;for(let j=sequenceFixedLength;j>=0&&(nestedNode.sequence[j]["*DJM_finished"]||nestedNode.sequence[j]["*DJM_skipped"]||nestedNode.sequence[j]["*DJM_done"]||nestedNode["*alternate"]&&!nestedNode.sequence[j]["*DJM_shown"]);j--)nestedNode["*DJM_finished"]=0===j,hasPendingSequence=!nestedNode["*DJM_finished"]}else if(hasResponseProperty)if(returnedResponseValueNodeHasFinished)nestedNode["*DJM_done"]=!0;else{const maxIndex=nestedNode.response.length-1;nestedNode["*DJM_finished"]=nestedNode.response[maxIndex]["*DJM_finished"]||nestedNode.response[maxIndex]["*DJM_skipped"]}if(sequenceParentNodeIsAlternate&&(nestedNode["*DJM_finished"]||nestedNode["*DJM_skipped"])&&(currentSequenceId=nestedNode["*DJM_sequenceId"],updateNextSequenceNode(currentSequenceId,void 0!==skipToNode[currentSequenceId]?skipToNode[currentSequenceId].sequenceNodeLevel:0,!0)),returnedResponseValueNodeHasFinished&&hasPendingSequence)break}}const returnedResponseFinished=returnedResponseValueNodeHasFinished&&!hasPendingSequence;if((jsonStringKey[0]["*DJM_finished"]||jsonStringKey[0]["*DJM_skipped"]||returnedResponseFinished)&&jsonStringKey.shift(),returnedResponseFinished&&(savedInfo.responseId=void 0),savedInfo.responseHasPendingAlternateFromParent=void 0,retrievedResponseNodeLevel=0,retrievedResponseValueNodeLevel=0,nestedNodes.length=0,savedInfo.allNodesExcluded=contextManager.isExcluded&&!savedInfo.resultSentBefore,0===jsonStringKey.length){if(savedInfo.resultSentBefore=void 0,savedInfo.rootNodeIndex=void 0,savedInfo.responseId=void 0,savedInfo.lastResponseParentNode=void 0,savedInfo.lastSequenceIsAlternate=void 0,reloaded?(jsonStringKey=reloaded,reloaded=void 0,contextManager.isExcluded?savedInfo.allNodesExcluded||recursiveIteration(jsonStringKey,0):sendMessage("result")):savedInfo.allNodesExcluded||sendMessage("recall"),savedInfo.allNodesExcluded)throw new Error(`["${jsonFileName}" >> "${key}"]\nDo not exclude all nodes!`);return}return void(contextManager.isExcluded?recursiveIteration(jsonStringKey,0):sendMessage("result"))}}catch(error){savedInfo.resultObject=error.message,sendMessage("exception")}}savedInfo.allNodesExcluded?(djm.savedInfo.allNodesExcluded=void 0,postMessage({type:"recall",data:djm})):contextManager.isExcluded||""!==response?""!==response&&responseFN(response):recursiveIteration(jsonStringKey,0)}setInstance(e.data,data=>{getResult(data.key,data.response,data.excludeTemplate,data.canAppendResponses)})}}`],{type:"application/javascript"}))),_Run=async(key="",{response:response="",excludeTemplate:excludeTemplate,lock:lock=!1,reset:reset=!1}={})=>{let originalResolve,originalReject;async function reloadRecall(reloaded){instanceManager[key].jsonStringKey=reloaded,start()}async function start(){return new Promise(async(resolve,reject)=>{let keyInstance;if(originalResolve=originalResolve||resolve,originalReject=originalReject||reject,""===jsonString&&originalReject('First load "DJM._LoadJSONFileAsync()"'),reset?response=(instanceManager[key]=instanceManagerHandler[key]=void 0)||"":instanceManagerHandler[key]&&""===response?(keyInstance=instanceManager[key]=instanceManagerHandler[key],instanceManagerHandler[key]=void 0):keyInstance=instanceManager[key],keyInstance){if(keyInstance.isLoadingJsonFile)return void setTimeout(()=>start(),0);if(lock)return void sendResult(keyInstance.savedInfo.resultObject);if(keyInstance.savedInfo.requiredResult){if(""===response)return keyInstance.savedInfo.requiredResult.isRequired=(keyInstance.savedInfo.requiredResult.hasRequired=void 0)||!0,canAppendResponses&&(keyInstance.savedInfo.requiredResult.responses=keyInstance.savedInfo.resultObject.responses),void originalResolve(keyInstance.savedInfo.requiredResult);keyInstance.savedInfo.requiredResult=void 0}keyInstance.canPrepareReloaded?instanceManager[key].reloaded=jsonString[key]:instanceManager[key].reloaded=void 0}mainWorker.postMessage(void 0===keyInstance?{key:key,jsonFileName:jsonFullFileName,jsonStringLoaded:""!==jsonString,jsonStringKey:jsonString[key],reloaded:1===jsonString[key].length,response:response,excludeTemplate:excludeTemplate,canAppendResponses:canAppendResponses}:{key:key,instance:keyInstance,response:response,excludeTemplate:excludeTemplate,canAppendResponses:canAppendResponses}),mainWorker.onmessage=(e=>{const{type:type,data:data}=e.data;if("result"===type){const{resultObject:resultObject}=data.savedInfo,jsonStringKeyLength=data.jsonStringKey.length;let reloadedPrepared;if(resultObject.isRepeatResponse?(instanceManagerHandler[key]={},canAppendResponses&&(data.savedInfo.resultObject.responses=instanceManager[key].savedInfo.resultObject.responses),instanceManagerHandler[key]=data,reloadedPrepared=instanceManagerHandler[key].canPrepareReloaded&&instanceManagerHandler[key].reloaded,instanceManagerHandler[key].canPrepareReloaded=1===jsonStringKeyLength):(instanceManager[key]=data,reloadedPrepared=instanceManager[key].canPrepareReloaded&&instanceManager[key].reloaded,instanceManager[key].canPrepareReloaded=1===jsonStringKeyLength),!reloadedPrepared&&jsonStringKeyLength<=1&&canRefresh){const isOneNodeOnlyAndHasFinished=0===jsonStringKeyLength;instanceManagerHandler[key]?instanceManagerHandler[key].isLoadingJsonFile=!0:instanceManager[key].isLoadingJsonFile=!0,_LoadJSONFileAsync(jsonFilePath,reloadedJsonString=>{isOneNodeOnlyAndHasFinished&&(instanceManagerHandler[key]?instanceManagerHandler[key].jsonStringKey=reloadedJsonString[key]:instanceManager[key].jsonStringKey=reloadedJsonString[key]),instanceManagerHandler[key]?instanceManagerHandler[key].isLoadingJsonFile=void 0:instanceManager[key].isLoadingJsonFile=void 0})}originalResolve(resultObject)}else if("recall"===type)instanceManager[key]=data,canRefresh?_LoadJSONFileAsync(jsonFilePath,reloadedJsonString=>reloadRecall(reloadedJsonString[key])):reloadRecall(jsonString[key]);else if("exception"===type){const{resultObject:resultObject}=data.savedInfo;instanceManager[key]=data,originalReject(resultObject)}})})}return start().then(result=>result).catch(error=>{throw new Error(error)})};return{_LoadJSONFileAsync:_LoadJSONFileAsync,_Run:_Run,_RunDebounced:applyDebounce(_Run),_Settings:_Settings,_TemplateGenerator:_TemplateGenerator,_IsJSONFileLoaded:(()=>""!==jsonString)()}})();
